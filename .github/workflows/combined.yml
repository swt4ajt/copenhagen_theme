name: CI/CD Workflow

on:
  push:
    branches:
      - master
      - beta
  pull_request:
    branches:
      - "*"

jobs:
  # Lint commit messages
  commitlint:
    name: Lint commit messages
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: zendesk/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Setup Node.js
        uses: zendesk/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint all commit messages
        run: yarn commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }}

  # Lint JS files
  lint:
    name: Lint JS files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: zendesk/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: zendesk/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: ESlint
        run: yarn eslint

  # Run tests
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: zendesk/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: zendesk/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Test
        run: yarn test

  # Build the project
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: zendesk/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: zendesk/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build

  # Lighthouse audit
  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: zendesk/checkout@v3
      - name: Setup Node.js
        uses: zendesk/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Disable AppArmor
        run: echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns
      - name: Install node_modules
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Upload theme
        run: node ./bin/theme-upload.js
        env:
          ZENDESK_EMAIL: ${{ secrets.ZENDESK_EMAIL }}
          ZENDESK_API_TOKEN: ${{ secrets.ZENDESK_API_TOKEN }}
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          BRAND_ID: ${{ secrets.BRAND_ID }}
      - name: Audit URLs using Lighthouse
        run: yarn test-a11y
        env:
          end_user_email: ${{ secrets.END_USER_EMAIL }}
          end_user_password: ${{ secrets.END_USER_PASSWORD }}
          subdomain: ${{ secrets.ZENDESK_SUBDOMAIN }}
          urls: |
            https://${{ secrets.subdomain }}.zendesk.com/hc/en-us
            ...

  # Release job
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, lighthouse]
    steps:
      - name: Checkout
        uses: zendesk/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: zendesk/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.release_bot_github_token }}
          GIT_AUTHOR_NAME: ${{ secrets.release_bot_git_name }}
          GIT_AUTHOR_EMAIL: ${{ secrets.release_bot_git_email }}
          GIT_COMMITTER_NAME: ${{ secrets.release_bot_git_name }}
          GIT_COMMITTER_EMAIL: ${{ secrets.release_bot_git_email }}